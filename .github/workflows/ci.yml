name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Show file list
        run: ls -la

      - name: Run a simple check
        run: |
          test -f hello.txt
          echo "All good âœ…"

      - name: Run health_check.sh
        run: |
          mkdir -p ci-logs
          bash scripts/health_check.sh | tee ci-logs/health_check.log

      - name: Upload CI logs artifact
        uses: actions/upload-artifact@v4
        with:
          name: ci-logs
          path: ci-logs/

  docker:
    name: Build & Push Docker image
    runs-on: ubuntu-latest
    needs: build     # wait for your CI job to finish
    permissions:
      contents: read
      packages: write   # allow pushing to GHCR
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/git-practice:latest
            ghcr.io/${{ github.repository_owner }}/git-practice:${{ github.sha }}


  smoketest:
    name: Pull image & verify homepage
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Pull the image from GHCR
        run: docker pull ghcr.io/${{ github.repository_owner }}/git-practice:${{ github.sha }}

      - name: Run the container
        run: |
          docker run -d --rm --name web -p 8080:80 ghcr.io/${{ github.repository_owner }}/git-practice:${{ github.sha }}
          # wait a moment for nginx to start
          sleep 2

      - name: Verify homepage contains marker text
        run: |
          curl -sS http://localhost:8080 | grep -q "Deployed with GitHub Actions + Docker + NGINX"
          echo "Smoke test passed"

      - name: Stop container
        if: always()
        run: docker stop web
